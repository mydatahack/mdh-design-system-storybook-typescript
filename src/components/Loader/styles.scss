@use 'sass:math';
@import '../../css/variables';
@import '../../css/mixins';

// size
$loader-container-size: 80px;
$loader-width: 48px;
$loader-height: 16px;
$loader-perspective: 2000px;
$loader-speed: 1.5s;

.loader3dContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $loader-container-size;
  display: flex;
  flex-direction: column;
}

.loader3dMiddle {
  position: relative;
  width: $loader-width;
  height: $loader-height;
  transform-style: preserve-3d;
  perspective: $loader-perspective;
  animation-name: loader-middle;
  animation-duration: $loader-speed;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

.loader3dFace {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.loader3dFaceFront {
  @include transformCrossBrowsers(rotateY(0deg) translateZ(#{math.div($loader-width, 2)}));
  background-color: $practical-900;
}

.loader3dFaceRight {
  @include transformCrossBrowsers(rotateY(90deg) translateZ(#{math.div($loader-width, 2)}));
  background-color: $magic-600;
}

.loader3dFaceBack {
  @include transformCrossBrowsers(rotateY(180deg) translateZ(#{math.div($loader-width, 2)}));
  background-color: $practical-900;
}

@keyframes loader-middle {
  0% {
    @include transformCrossBrowsers(rotateY(0deg));
  }

  100% {
    @include transformCrossBrowsers(rotateY(-180deg));
  }
}

/* loader top */
.loader3dTopOuter {
  @include transformCrossBrowsers(translateX(20px) translateY(-10px));
  animation-name: loader-top-outer-move;
  animation-duration: $loader-speed;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

@keyframes loader-top-outer-move {
  0% {
    @include transformCrossBrowsers(translateX(20px) translateY(-10px));
  }

  40% {
    @include transformCrossBrowsers(translateX(0) translateY(0));
  }

  60% {
    @include transformCrossBrowsers(translateX(0) translateY(0));
  }

  100% {
    @include transformCrossBrowsers(translateX(20px) translateY(-10px));
  }
}

.loader3dTop {
  width: $loader-width;
  height: $loader-height;
  transform-style: preserve-3d;
  perspective: $loader-perspective;
  animation-name: loader-middle;
  animation-duration: $loader-speed;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

/* loader bottom */
.loader3dBottomOuter {
  @include transformCrossBrowsers(translateX(-20px) translateY(10px));
  animation-name: loader-bottom-outer-move;
  animation-duration: $loader-speed;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

@keyframes loader-bottom-outer-move {
  0% {
    @include transformCrossBrowsers(translateX(-20px) translateY(10px));
  }

  40% {
    @include transformCrossBrowsers(translateX(0) translateY(0));
  }

  60% {
    @include transformCrossBrowsers(translateX(0) translateY(0));
  }

  100% {
    @include transformCrossBrowsers(translateX(-20px) translateY(10px));
  }
}

.loader3dBottom {
  position: relative;
  width: $loader-width;
  height: $loader-height;
  transform-style: preserve-3d;
  perspective: $loader-perspective;
  animation-name: loader-middle;
  animation-duration: $loader-speed;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}
