@use 'sass:math';
@import '../../css/variables';

$half-gutter: math.div($grid-gutter, 2);

.row {
  margin: 0 #{-$half-gutter};
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.col {
  margin-bottom: $grid-gutter;
  padding: 0 $half-gutter;
  display: flex;
  flex-direction: column;

  &.align__x {
    &--left {
      align-items: flex-start;
    }

    &--center {
      align-items: center;
    }

    &--right {
      align-items: flex-end;
    }
  }

  &.align__y {
    &--top {
      justify-content: flex-start;
    }

    &--center {
      justify-content: center;
    }

    &--bottom {
      justify-content: flex-end;
    }
  }
}

// Exclude bottom gutter
.excludeBottomGutter {
  margin-bottom: 0;

  &--sm {
    @media screen and (max-width: $breakpoint-md) {
      margin-bottom: 0;
    }
  }

  &--md {
    @media screen and (min-width: $breakpoint-md) and (max-width: $breakpoint-lg) {
      margin-bottom: 0;
    }
  }

  &--lg {
    @media screen and (min-width: $breakpoint-lg) {
      margin-bottom: 0;
    }
  }
}

// Col span
$col-span-options: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, auto;
$column-slug: col !default;

@mixin col($span) {
  @if ($span == auto) {
    flex: auto;
  } @else {
    max-width: math.div(100%, $grid-column-count) * $span;
    flex: 0 0 (math.div(100%, $grid-column-count) * $span);
  }
}

@each $i in $col-span-options {
  .#{#{$column-slug}--#{$i}} {
    @include col($i);
  }

  .#{#{$column-slug}-sm--#{$i}} {
    @media screen and (max-width: $breakpoint-md) {
      @include col($i);
    }
  }

  .#{#{$column-slug}-md--#{$i}} {
    @media screen and (min-width: $breakpoint-md) and (max-width: $breakpoint-lg) {
      @include col($i);
    }
  }

  .#{#{$column-slug}-lg--#{$i}} {
    @media screen and (min-width: $breakpoint-lg) {
      @include col($i);
    }
  }
}

$offset-slug: offset !default;

@mixin offset($span) {
  @if ($span == 0) {
    margin-left: 0;
  } @else {
    margin-left: math.div(100%, $grid-column-count) * $span;
  }
}

@for $i from 0 through $grid-column-count - 1 {
  .#{#{$offset-slug}--#{$i}},
  .#{#{$offset-slug}-sm--#{$i}} {
    @include offset($i);
  }
}

@for $i from 0 through $grid-column-count - 1 {
  .#{#{$offset-slug}-md--#{$i}} {
    @media screen and (min-width: $breakpoint-md) {
      @include offset($i);
    }
  }
}

@for $i from 0 through $grid-column-count - 1 {
  .#{#{$offset-slug}-lg--#{$i}} {
    @media screen and (min-width: $breakpoint-lg) {
      @include offset($i);
    }
  }
}
